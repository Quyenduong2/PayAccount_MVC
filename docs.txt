RewriteEngine On

# Chuyển hướng tất cả yêu cầu đến index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [L,QSA]

GPT 
RewriteEngine On
RewriteBase /BaiTapChuyenDePHP/PayAccount_MVC/

# Cho phép truy cập trực tiếp các file tĩnh trong public
RewriteCond %{REQUEST_URI} ^/BaiTapChuyenDePHP/PayAccount_MVC/public/ [NC]
RewriteRule ^ - [L]

# Chuyển hướng tất cả yêu cầu đến index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^ index.php [L]

<?php
require_once './app/Controllers/HomeController.php';
require_once './app/Controllers/AuthController.php';
require_once './app/Controllers/AccountController.php';


// Đơn giản routing dựa trên URL
$base_path = '/BaiTapChuyenDePHP/PayAccount_MVC';
$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);
$uri = str_replace($base_path, '', $uri);
$uri = rtrim($uri, '/');
$uri = $uri === '' ? '/' : $uri;
$method = $_SERVER['REQUEST_METHOD'];

error_log("URI: $uri, Method: $method"); // Debug

  public function profile()
    {
        $basePath = '/BaiTapChuyenDePHP/PayAccount_MVC';
        if (!isset($_COOKIE['auth_token'])) {
            error_log("No auth_token cookie found");
            header('Location: /BaiTapChuyenDePHP/PayAccount_MVC/login');
            exit;
        }
        $userModel = new User();
        $user = $userModel->getUserByToken($_COOKIE['auth_token']);
        if (!$user || !isset($user['user_id'])) {
            error_log("Invalid user or missing user id for token: " . ($_COOKIE['auth_token'] ?? 'empty'));
            setcookie('auth_token', '', time() - 3600, '/BaiTapChuyenDePHP/PayAccount_MVC/');
            header('Location: /BaiTapChuyenDePHP/PayAccount_MVC/login');
            exit;
        }

        $section = $_GET['section'] ?? ($user['role'] === 'admin' ? 'dashboard' : 'profile');
        $users = [];
        $accounts = [];
        $user_accounts = [];
        $games = [];
        $kyc_requests = [];


        $kyc_status = $userModel->getKycStatus($user['user_id']);

        if ($user['role'] === 'admin') {
            $users = $userModel->getAllUsers();
            $accountModel = new Account();
            $accounts = $accountModel->getAll();
            $gameModel = new Game();
            $games = $gameModel->getAllGames();
            $kyc_requests = $userModel->getKycRequests();
        } elseif ($user['role'] === 'user' && $section === 'track-accounts') {
            $accountModel = new Account();
            $user_accounts = $accountModel->getByUserId($user['user_id']);
        }

        if ($section === 'kyc-submit' && $_SERVER['REQUEST_METHOD'] === 'POST') {
            $kyc_full_name = $_POST['kyc_full_name'] ?? '';
            $id_number = $_POST['id_number'] ?? '';
            if (isset($_FILES['id_image']) && $_FILES['id_image']['error'] === UPLOAD_ERR_OK) {
                $upload_dir = 'public/uploads/kyc/';
                if (!is_dir($upload_dir)) {
                    mkdir($upload_dir, 0777, true);
                }
                $id_image = $upload_dir . uniqid() . '_' . basename($_FILES['id_image']['name']);
                if (move_uploaded_file($_FILES['id_image']['tmp_name'], $id_image)) {
                    if ($userModel->submitKycRequest($user['user_id'], $kyc_full_name, $id_number, $id_image)) {
                        $success = "Yêu cầu KYC đã được gửi, chờ admin xét duyệt.";
                        $kyc_status = 'pending';
                    } else {
                        $error = "Gửi yêu cầu KYC thất bại.";
                    }
                } else {
                    $error = "Tải ảnh lên thất bại.";
                }
            } else {
                $error = "Vui lòng tải lên ảnh CMND/CCCD.";
            }
            $section = 'profile';
        } elseif ($section === 'manage-kyc' && isset($_GET['action'], $_GET['id'])) {
            $request_id = $_GET['id'];
            $action = $_GET['action'];
            if ($action === 'approve_kyc' || $action === 'reject_kyc') {
                $status = $action === 'approve_kyc' ? 'approved' : 'rejected';
                if ($userModel->updateKycStatus($request_id, $status, $user['user_id'])) {
                    $success = "Cập nhật trạng thái KYC thành công.";
                } else {
                    $error = "Cập nhật trạng thái KYC thất bại.";
                }
            }
            $kyc_requests = $userModel->getKycRequests();
        }

        error_log("Profile page accessed, user: {$user['email']}, role: {$user['role']}, section: $section");
        require './app/Views/Auth/profile.php';
    }

      <!-- Debug thông tin ảnh -->
                <div class="debug-info">
                    <p><strong>Debug Image Path:</strong> <?php echo htmlspecialchars($game['game_image'] ?? 'N/A'); ?></p>
                    <p><strong>Cleaned Image Path:</strong> <?php echo htmlspecialchars($imagePath); ?></p>
                    <p><strong>Resolved URL:</strong> <?php echo htmlspecialchars($imageUrl); ?></p>
                    <p><strong>File Exists:</strong> <?php echo file_exists($_SERVER['DOCUMENT_ROOT'] . $basePath . '/public/images/' . $imagePath) ? 'Yes' : 'No'; ?></p>
               </div>





<?php
$isLoggedIn = isset($user) && $user !== false;
$userName = $isLoggedIn ? htmlspecialchars($user['full_name']) : '';

// Xử lý game_image để loại bỏ ./ và đảm bảo đường dẫn đúng
$imagePath = $game['game_image'] ?? 'placeholder.jpg';
$imagePath = preg_replace('/^\.\//', '', $imagePath); // Loại bỏ ./
$imageUrl = $basePath . '/' . $imagePath;
?>


